<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanNotCreateWindow" xml:space="preserve">
    <value>Can not create tool window.</value>
  </data>
  <data name="GuidanceBrowserToolWindow_WindowTitle" xml:space="preserve">
    <value>Guidance Browser</value>
  </data>
  <data name="GuidanceExplorerToolWindow_WindowTitle" xml:space="preserve">
    <value>Guidance Explorer</value>
  </data>
  <data name="RuntimeShellPackage_CheckFertInstalled_Enabled" xml:space="preserve">
    <value>The following extension is currently installed and enabled: 
    {0}.

This extension is not compatible with the current version of the '{1}' extension. We recommend that you disable this extension for correct operation.

To remedy this problem, open the 'Extension Manager' window in Visual Studio (Tools menu), disable the listed extension above, and restart Visual Studio.</value>
  </data>
  <data name="RuntimeShellPackage_DependencyNotAvailable" xml:space="preserve">
    <value>The dependency '{0}' could not be found in the repository.</value>
  </data>
  <data name="RuntimeShellPackage_DumpMefLogs" xml:space="preserve">
    <value>A MEF exception happened loading '{0}'. The MEF logs will be opened now for diagnostics.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_ResolvingAssembly" xml:space="preserve">
    <value>Attempting to resolve partially named assembly '{0}'.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_ResolvingAssemblyFailed" xml:space="preserve">
    <value>Partially named assembly '{0}', was not resolved to any Pattern Toolkit assembly loaded into the AppDomain.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_ResolvingAssemblyForLoadedAssembly" xml:space="preserve">
    <value>Partially named assembly '{0}', was loaded into the current AppDomain.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_ResolvingAssemblyForToolkitAssembly" xml:space="preserve">
    <value>Partially named assembly '{0}', is installed by an enabled Pattern Toolkit.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_ResolvingAssemblySucceeded" xml:space="preserve">
    <value>Partially named assembly '{0}', was resolved to Pattern Toolkit assembly '{1}'.</value>
  </data>
  <data name="RuntimeShellPackage_OnAssemblyResolved_UnexpectedError" xml:space="preserve">
    <value>Unexpected error resolving partially named assembly, the error was: {0}</value>
  </data>
  <data name="ShortcutEditorFactory_ErrorShortcutFormat" xml:space="preserve">
    <value>Shortcut cannot be executed, file content is invalid.</value>
  </data>
  <data name="ShortcutEditorFactory_ErrorShortcutIO" xml:space="preserve">
    <value>Shortcut cannot be read or written to file. Check the permissions to the file and whether the file is locked.</value>
  </data>
  <data name="SolutionBuilderToolWindow_WindowTitle" xml:space="preserve">
    <value>Solution Builder</value>
  </data>
  <data name="ToolkitReferencesFolderName" xml:space="preserve">
    <value>Pattern Toolkit References</value>
  </data>
  <data name="TraceOptionsPageControl_LoggingLevelTitle" xml:space="preserve">
    <value>Logging Level</value>
  </data>
  <data name="TraceOptionsPageControl_SourceNameInvalid" xml:space="preserve">
    <value>Source Name is Invalid.</value>
  </data>
  <data name="TraceOptionsPageControl_SourceNameRequired" xml:space="preserve">
    <value>Source Name is Required.</value>
  </data>
  <data name="TraceOptionsPageControl_SourceNameTitle" xml:space="preserve">
    <value>Source Name</value>
  </data>
  <data name="VsIdleTaskHost_ErrorRegistration" xml:space="preserve">
    <value>Failed to register task to perform on VS idle time.</value>
  </data>
</root>