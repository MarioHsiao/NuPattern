<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="ProductStateStoreSchema" targetNamespace="http://schemas.microsoft.com/visualstudio/patterning/runtime/productstate" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/visualstudio/patterning/runtime/productstate" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- ProductState -->
  <xsd:element name="productState" type="ProductState" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ProductState">
    <xsd:annotation>
      <xsd:documentation>The state of all products in the solution.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ProductStateHasProducts -->
          <xsd:element name="products" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ProductStateHasProducts</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="productStateHasProducts">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ProductStateHasProducts needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="product" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductState Moniker -->
  <xsd:element name="productStateMoniker" type="ProductStateMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ProductStateMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductState instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Property -->
  <xsd:element name="property" type="Property" substitutionGroup="instanceBase" />
  <xsd:complexType name="Property">
    <xsd:annotation>
      <xsd:documentation>A property of an element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBase">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: RawValue -->
        <xsd:attribute name="rawValue" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The current serialized value of the property. Use Value to get the typed value.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Property Moniker -->
  <xsd:element name="propertyMoniker" type="PropertyMoniker" substitutionGroup="instanceBaseMoniker" />
  <xsd:complexType name="PropertyMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Property instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBaseMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Collection -->
  <xsd:element name="collection" type="Collection" substitutionGroup="abstractElement" />
  <xsd:complexType name="Collection">
    <xsd:annotation>
      <xsd:documentation>A container for elements in a view.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Collection Moniker -->
  <xsd:element name="collectionMoniker" type="CollectionMoniker" substitutionGroup="abstractElementMoniker" />
  <xsd:complexType name="CollectionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Collection instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Element -->
  <xsd:element name="element" type="Element" substitutionGroup="abstractElement" />
  <xsd:complexType name="Element">
    <xsd:annotation>
      <xsd:documentation>An element of a view.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Element Moniker -->
  <xsd:element name="elementMoniker" type="ElementMoniker" substitutionGroup="abstractElementMoniker" />
  <xsd:complexType name="ElementMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Element instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElement -->
  <xsd:element name="productElement" abstract="true" type="ProductElement" substitutionGroup="instanceBase" />
  <xsd:complexType name="ProductElement" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>An element within the product.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBase">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ProductElementHasProperties -->
          <xsd:element name="properties" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ProductElementHasProperties</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="productElementHasProperties">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ProductElementHasProperties needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="property" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ProductElementHasReferences -->
          <xsd:element name="references" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ProductElementHasReferences</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="productElementHasReferences">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ProductElementHasReferences needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="reference" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: InstanceName -->
        <xsd:attribute name="instanceName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of this element instance.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElement Moniker -->
  <xsd:element name="productElementMoniker" abstract="true" type="ProductElementMoniker" substitutionGroup="instanceBaseMoniker" />
  <xsd:complexType name="ProductElementMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductElement instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBaseMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Product -->
  <xsd:element name="product" type="Product" substitutionGroup="productElement" />
  <xsd:complexType name="Product">
    <xsd:annotation>
      <xsd:documentation>A product instance in the solution.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ProductHasViews -->
          <xsd:element name="views" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ProductHasViews</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="unbounded" >
                  <xsd:element ref="productHasViews">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ProductHasViews needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="view" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ExtensionId -->
        <xsd:attribute name="extensionId" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The identifier of the Visual Studio extension deploying the product.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: ExtensionName -->
        <xsd:attribute name="extensionName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The name of the Visual Studio extension that deploys this product.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Author -->
        <xsd:attribute name="author" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The author of this product.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Version -->
        <xsd:attribute name="version" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The version of this product.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Product Moniker -->
  <xsd:element name="productMoniker" type="ProductMoniker" substitutionGroup="productElementMoniker" />
  <xsd:complexType name="ProductMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Product instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- View -->
  <xsd:element name="view" type="View" substitutionGroup="instanceBase" />
  <xsd:complexType name="View">
    <xsd:annotation>
      <xsd:documentation>A view of a product instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBase">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ViewHasElements -->
          <xsd:element name="elements" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ViewHasElements</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="viewHasElements">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ViewHasElements needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="abstractElement" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ViewHasExtensionProducts -->
          <xsd:element name="extensionProducts" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ViewHasExtensionProducts</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="viewHasExtensionProducts">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ViewHasExtensionProducts needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="product" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- View Moniker -->
  <xsd:element name="viewMoniker" type="ViewMoniker" substitutionGroup="instanceBaseMoniker" />
  <xsd:complexType name="ViewMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for View instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="InstanceBaseMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractElement -->
  <xsd:element name="abstractElement" abstract="true" type="AbstractElement" substitutionGroup="productElement" />
  <xsd:complexType name="AbstractElement" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>A child collection or element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ElementHasChildElements -->
          <xsd:element name="elements" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ElementHasChildElements</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="elementHasChildElements">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ElementHasChildElements needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="abstractElement" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ElementHasExtensions -->
          <xsd:element name="extensionProducts" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ElementHasExtensions</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="elementHasExtensions">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ElementHasExtensions needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="product" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- AbstractElement Moniker -->
  <xsd:element name="abstractElementMoniker" abstract="true" type="AbstractElementMoniker" substitutionGroup="productElementMoniker" />
  <xsd:complexType name="AbstractElementMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for AbstractElement instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ProductElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- InstanceBase -->
  <xsd:element name="instanceBase" abstract="true" type="InstanceBase" substitutionGroup="core:modelElement" />
  <xsd:complexType name="InstanceBase" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>An element instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: DefinitionId -->
        <xsd:attribute name="definitionId" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The model element identifier in the owning definition.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: DefinitionName -->
        <xsd:attribute name="definitionName" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Informational-only rendering of the defining element referenced by the DefinitionId property.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Notes -->
        <xsd:attribute name="notes" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Notes for this element.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- InstanceBase Moniker -->
  <xsd:element name="instanceBaseMoniker" abstract="true" type="InstanceBaseMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="InstanceBaseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for InstanceBase instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Reference -->
  <xsd:element name="reference" type="Reference" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Reference">
    <xsd:annotation>
      <xsd:documentation>A reference to external data or service.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Value -->
        <xsd:attribute name="value" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The value of the reference, having meaning to the kind of the reference.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Kind -->
        <xsd:attribute name="kind" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>The kind of the reference, used to classify the reference. If this is the full type name of a class, then the class is used to provide the display characteristics of this reference.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Tag -->
        <xsd:attribute name="tag" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Provides arbitrary annotations on a reference, typically used by automation.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Reference Moniker -->
  <xsd:element name="referenceMoniker" type="ReferenceMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ReferenceMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Reference instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElementHasProperties -->
  <xsd:element name="productElementHasProperties" abstract="true" type="ProductElementHasProperties" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ProductElementHasProperties" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Property -->
          <xsd:element ref="property" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElementHasProperties Moniker -->
  <xsd:element name="productElementHasPropertiesMoniker" abstract="true" type="ProductElementHasPropertiesMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ProductElementHasPropertiesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductElementHasProperties instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductHasViews -->
  <xsd:element name="productHasViews" abstract="true" type="ProductHasViews" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ProductHasViews" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end View -->
          <xsd:element ref="view" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductHasViews Moniker -->
  <xsd:element name="productHasViewsMoniker" abstract="true" type="ProductHasViewsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ProductHasViewsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductHasViews instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ViewHasElements -->
  <xsd:element name="viewHasElements" abstract="true" type="ViewHasElements" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ViewHasElements" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end AbstractElement -->
          <xsd:element ref="abstractElement" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ViewHasElements Moniker -->
  <xsd:element name="viewHasElementsMoniker" abstract="true" type="ViewHasElementsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ViewHasElementsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ViewHasElements instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ElementHasChildElements -->
  <xsd:element name="elementHasChildElements" abstract="true" type="ElementHasChildElements" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ElementHasChildElements" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end AbstractElement -->
          <xsd:element ref="abstractElement" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ElementHasChildElements Moniker -->
  <xsd:element name="elementHasChildElementsMoniker" abstract="true" type="ElementHasChildElementsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ElementHasChildElementsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ElementHasChildElements instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductStateHasProducts -->
  <xsd:element name="productStateHasProducts" abstract="true" type="ProductStateHasProducts" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ProductStateHasProducts" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Product -->
          <xsd:element ref="product" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductStateHasProducts Moniker -->
  <xsd:element name="productStateHasProductsMoniker" abstract="true" type="ProductStateHasProductsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ProductStateHasProductsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductStateHasProducts instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ElementHasExtensions -->
  <xsd:element name="elementHasExtensions" abstract="true" type="ElementHasExtensions" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ElementHasExtensions" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Product -->
          <xsd:element ref="product" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ElementHasExtensions Moniker -->
  <xsd:element name="elementHasExtensionsMoniker" abstract="true" type="ElementHasExtensionsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ElementHasExtensionsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ElementHasExtensions instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ViewHasExtensionProducts -->
  <xsd:element name="viewHasExtensionProducts" abstract="true" type="ViewHasExtensionProducts" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ViewHasExtensionProducts" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Product -->
          <xsd:element ref="product" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ViewHasExtensionProducts Moniker -->
  <xsd:element name="viewHasExtensionProductsMoniker" abstract="true" type="ViewHasExtensionProductsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ViewHasExtensionProductsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ViewHasExtensionProducts instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElementHasReferences -->
  <xsd:element name="productElementHasReferences" abstract="true" type="ProductElementHasReferences" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ProductElementHasReferences" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Reference -->
          <xsd:element ref="reference" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ProductElementHasReferences Moniker -->
  <xsd:element name="productElementHasReferencesMoniker" type="ProductElementHasReferencesMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ProductElementHasReferencesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ProductElementHasReferences instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
</xsd:schema>

