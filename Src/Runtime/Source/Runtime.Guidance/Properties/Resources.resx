<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GuidanceManager_DefaultExtensionProjectName" xml:space="preserve">
    <value>Models</value>
  </data>
  <data name="GuidanceManager_DuplicateGuidanceName" xml:space="preserve">
    <value>Guidance extension with name '{0}' already exists in the solution.</value>
  </data>
  <data name="GuidanceManager_ExtensionNotInstalled" xml:space="preserve">
    <value>Guidance extension with identifier '{0}' is not installed or it is not properly registered.</value>
  </data>
  <data name="GuidanceManager_MustInitializeSolutionState" xml:space="preserve">
    <value>Manager has not been initialized with a solution state yet.</value>
  </data>
  <data name="GuidanceManager_NullGuidanceWorkflow" xml:space="preserve">
    <value>The guidance workflow cannot be null.</value>
  </data>
  <data name="UserAcceptanceBinding_UserMessage" xml:space="preserve">
    <value>Requires User Acceptance</value>
  </data>
  <data name="GuidanceManager_ExtensionAlreadyInstantiated" xml:space="preserve">
    <value>Guidance extension'{0}' instance name '{1}' is already instantiated.</value>
  </data>
  <data name="GuidanceActionViewModel_PostConditionsLabel" xml:space="preserve">
    <value>Post-Conditions</value>
  </data>
  <data name="GuidanceActionViewModel_PreConditionsLabel" xml:space="preserve">
    <value>Pre-Conditions</value>
  </data>
  <data name="DefaultWorkflowViewModel_FinalLabel" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="DefaultWorkflowViewModel_InitialLabel" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="DefaultWorkflowViewModelBuilder_ErrorNoMatchingForkOrJoin" xml:space="preserve">
    <value>Could not find matching Join for Fork</value>
  </data>
  <data name="DefaultWorkflowViewModelBuilder_NoMatchingMerge" xml:space="preserve">
    <value>Could not find matching Merge for Decision</value>
  </data>
  <data name="DefaultWorkflowViewModelBuilder_ErrorOrphanJoin" xml:space="preserve">
    <value>Encountered Join with parent not set</value>
  </data>
  <data name="DefaultWorkflowViewModelBuilder_ErrorOrphanMerge" xml:space="preserve">
    <value>Encountered Merge with parent not set</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_TraceCreateUri" xml:space="preserve">
    <value>Creating uri for content with extension id {0}, path {1}</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_ErrorExtensionNotFound" xml:space="preserve">
    <value>Guidance extension '{0}' not found</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_TraceUriCreated" xml:space="preserve">
    <value>Created uri {0}</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_TraceResolvingUri" xml:space="preserve">
    <value>Resolving uri {0}</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_ErrorFileNotExist" xml:space="preserve">
    <value>File '{0}' does not exist.</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_TraceResolvedToPath" xml:space="preserve">
    <value>Resolved to path {0}</value>
  </data>
  <data name="GuidanceContentUriReferenceProvider_TraceOpenUri" xml:space="preserve">
    <value>Opening content </value>
  </data>
  <data name="LaunchPointUriReferenceProvider_TraceRegisterLaunchPoint" xml:space="preserve">
    <value>Registering launch point uri {0}</value>
  </data>
  <data name="GuidanceConditionsEvaluator_TraceBlockState" xml:space="preserve">
    <value>Setting state to BLOCKED '{0}.{1}'.</value>
  </data>
  <data name="GuidanceConditionsEvaluator_TraceEvaluationHeader" xml:space="preserve">
    <value>========================== Evaluating Conditions for '{0}.{1}'.</value>
  </data>
  <data name="GuidanceConditionsEvaluator_TraceStateToPostConditions" xml:space="preserve">
    <value>Setting state to </value>
  </data>
  <data name="GuidanceManager_TraceOpenFromSolutionState" xml:space="preserve">
    <value>Loading guidance extensions from solution state</value>
  </data>
  <data name="GuidanceManager_TraceInitializeExtension" xml:space="preserve">
    <value>Initializing existing guidance extension '{0}' (Id: '{1}').</value>
  </data>
  <data name="GuidanceManager_TraceFailedExtensionInitialization" xml:space="preserve">
    <value>Failed to initialize guidance extension</value>
  </data>
  <data name="GuidanceManager_TraceInstantiateExtension" xml:space="preserve">
    <value>Instantiating guidance extension '{0}' (Id: '{1}').</value>
  </data>
  <data name="GuidanceManager_TraceFailedInstantiate" xml:space="preserve">
    <value>Failed to instantiate guidance extension</value>
  </data>
  <data name="GuidanceManager_TraceFinishExtension" xml:space="preserve">
    <value>Finishing guidance extension</value>
  </data>
  <data name="GuidanceManager_TraceFailedFinish" xml:space="preserve">
    <value>An error happened while finishing the guidance extension. State may be invalid. Continuing to remove guidance extension from solution state.
{0}</value>
  </data>
  <data name="GuidanceManager_TraceFinishCOmplete" xml:space="preserve">
    <value>Guidance extension successfully finished.</value>
  </data>
  <data name="ProjectTypeProvider_TraceLoadTypes" xml:space="preserve">
    <value>Reloading types available in the current solution</value>
  </data>
  <data name="ProjectTypeProvider_TraceLoadProjectTypes" xml:space="preserve">
    <value>Retrieving types from project {0}</value>
  </data>
</root>