//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;
namespace Microsoft.VisualStudio.Patterning.Runtime.Schema
{
	/// <summary>
	/// DomainModel PatternModelDomainModel
	/// The design of a pattern in a pattern toolkit
	/// </summary>
	[DslDesign::DisplayNameResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel.DisplayName", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
	[global::System.CLSCompliant(true)]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.CoreDomainModel))]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel))]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]
	[DslModeling::DomainObjectId("15a342fd-f046-4b7a-9dc8-73b0a8eec119")]
	public partial class PatternModelDomainModel : DslModeling::DomainModel
	{
		#region Constructor, domain model Id
	
		/// <summary>
		/// PatternModelDomainModel domain model Id.
		/// </summary>
		public static readonly global::System.Guid DomainModelId = new global::System.Guid(0x15a342fd, 0xf046, 0x4b7a, 0x9d, 0xc8, 0x73, 0xb0, 0xa8, 0xee, 0xc1, 0x19);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="store">Store containing the domain model.</param>
		public PatternModelDomainModel(DslModeling::Store store)
			: base(store, DomainModelId)
		{
			// Call the partial method to allow any required serialization setup to be done.
			this.InitializeSerialization(store);		
		}
		
	
		///<Summary>
		/// Defines a partial method that will be called from the constructor to
		/// allow any necessary serialization setup to be done.
		///</Summary>
		///<remarks>
		/// For a DSL created with the DSL Designer wizard, an implementation of this 
		/// method will be generated in the GeneratedCode\SerializationHelper.cs class.
		///</remarks>
		partial void InitializeSerialization(DslModeling::Store store);
	
	
		#endregion
		#region Domain model reflection
			
		/// <summary>
		/// Gets the list of generated domain model types (classes, rules, relationships).
		/// </summary>
		/// <returns>List of types.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override global::System.Type[] GetGeneratedDomainModelTypes()
		{
			return new global::System.Type[]
			{
				typeof(PatternModelSchema),
				typeof(PatternSchema),
				typeof(NamedElementSchema),
				typeof(PatternElementSchema),
				typeof(PropertySchema),
				typeof(ViewSchema),
				typeof(CollectionSchema),
				typeof(ElementSchema),
				typeof(CustomizableElementSchema),
				typeof(AbstractElementSchema),
				typeof(CustomizationPolicySchema),
				typeof(CustomizableSettingSchema),
				typeof(AutomationSettingsSchema),
				typeof(ProvidedExtensionPointSchema),
				typeof(ExtensionPointSchema),
				typeof(PatternModelHasPattern),
				typeof(PatternElementHasProperties),
				typeof(PatternHasViews),
				typeof(ViewHasElements),
				typeof(PolicyHasSettings),
				typeof(CustomizableElementHasPolicy),
				typeof(ElementHasElements),
				typeof(PatternHasProvidedExtensionPoints),
				typeof(ElementHasExtensionPoints),
				typeof(ViewHasExtensionPoints),
				typeof(PatternElementHasAutomationSettings),
				typeof(PatternModelSchemaDiagram),
				typeof(ViewHasElementsConnector),
				typeof(ElementHasElementsConnector),
				typeof(PatternElementConnector),
				typeof(ElementHasExtensionPointsConnector),
				typeof(ViewHasExtensionPointsConnector),
				typeof(PatternShape),
				typeof(ElementShape),
				typeof(CollectionShape),
				typeof(CustomizableElementShape),
				typeof(ExtensionPointShape),
				typeof(ViewShape),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.FixUpDiagram),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.DecoratorPropertyChanged),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ConnectorRolePlayerChanged),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemAddRule),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemDeleteRule),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerChangeRule),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerPositionChangeRule),
				typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemChangeRule),
			};
		}
		/// <summary>
		/// Gets the list of generated domain properties.
		/// </summary>
		/// <returns>List of property data.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override DomainMemberInfo[] GetGeneratedDomainProperties()
		{
			return new DomainMemberInfo[]
			{
				new DomainMemberInfo(typeof(PatternModelSchema), "BaseVersion", PatternModelSchema.BaseVersionDomainPropertyId, typeof(PatternModelSchema.BaseVersionPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchema), "BaseId", PatternModelSchema.BaseIdDomainPropertyId, typeof(PatternModelSchema.BaseIdPropertyHandler)),
				new DomainMemberInfo(typeof(PatternSchema), "ExtensionId", PatternSchema.ExtensionIdDomainPropertyId, typeof(PatternSchema.ExtensionIdPropertyHandler)),
				new DomainMemberInfo(typeof(PatternSchema), "CurrentDiagramId", PatternSchema.CurrentDiagramIdDomainPropertyId, typeof(PatternSchema.CurrentDiagramIdPropertyHandler)),
				new DomainMemberInfo(typeof(PatternSchema), "PatternLink", PatternSchema.PatternLinkDomainPropertyId, typeof(PatternSchema.PatternLinkPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "Name", NamedElementSchema.NameDomainPropertyId, typeof(NamedElementSchema.NamePropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "BaseId", NamedElementSchema.BaseIdDomainPropertyId, typeof(NamedElementSchema.BaseIdPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "DisplayName", NamedElementSchema.DisplayNameDomainPropertyId, typeof(NamedElementSchema.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "IsDisplayNameTracking", NamedElementSchema.IsDisplayNameTrackingDomainPropertyId, typeof(NamedElementSchema.IsDisplayNameTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "Description", NamedElementSchema.DescriptionDomainPropertyId, typeof(NamedElementSchema.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "IsDescriptionTracking", NamedElementSchema.IsDescriptionTrackingDomainPropertyId, typeof(NamedElementSchema.IsDescriptionTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "IsInheritedFromBase", NamedElementSchema.IsInheritedFromBaseDomainPropertyId, typeof(NamedElementSchema.IsInheritedFromBasePropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "SchemaPath", NamedElementSchema.SchemaPathDomainPropertyId, typeof(NamedElementSchema.SchemaPathPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "IsSystem", NamedElementSchema.IsSystemDomainPropertyId, typeof(NamedElementSchema.IsSystemPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "CodeIdentifier", NamedElementSchema.CodeIdentifierDomainPropertyId, typeof(NamedElementSchema.CodeIdentifierPropertyHandler)),
				new DomainMemberInfo(typeof(NamedElementSchema), "IsCodeIdentifierTracking", NamedElementSchema.IsCodeIdentifierTrackingDomainPropertyId, typeof(NamedElementSchema.IsCodeIdentifierTrackingPropertyHandler)),
				new DomainMemberInfo(typeof(PatternElementSchema), "ValidationRules", PatternElementSchema.ValidationRulesDomainPropertyId, typeof(PatternElementSchema.ValidationRulesPropertyHandler)),
				new DomainMemberInfo(typeof(PatternElementSchema), "Icon", PatternElementSchema.IconDomainPropertyId, typeof(PatternElementSchema.IconPropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "RawDefaultValue", PropertySchema.RawDefaultValueDomainPropertyId, typeof(PropertySchema.RawDefaultValuePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "Type", PropertySchema.TypeDomainPropertyId, typeof(PropertySchema.TypePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "IsVisible", PropertySchema.IsVisibleDomainPropertyId, typeof(PropertySchema.IsVisiblePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "IsReadOnly", PropertySchema.IsReadOnlyDomainPropertyId, typeof(PropertySchema.IsReadOnlyPropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "Category", PropertySchema.CategoryDomainPropertyId, typeof(PropertySchema.CategoryPropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "PropertyUsage", PropertySchema.PropertyUsageDomainPropertyId, typeof(PropertySchema.PropertyUsagePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "TypeConverterTypeName", PropertySchema.TypeConverterTypeNameDomainPropertyId, typeof(PropertySchema.TypeConverterTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "EditorTypeName", PropertySchema.EditorTypeNameDomainPropertyId, typeof(PropertySchema.EditorTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "RawValidationRules", PropertySchema.RawValidationRulesDomainPropertyId, typeof(PropertySchema.RawValidationRulesPropertyHandler)),
				new DomainMemberInfo(typeof(PropertySchema), "RawValueProvider", PropertySchema.RawValueProviderDomainPropertyId, typeof(PropertySchema.RawValueProviderPropertyHandler)),
				new DomainMemberInfo(typeof(ViewSchema), "IsVisible", ViewSchema.IsVisibleDomainPropertyId, typeof(ViewSchema.IsVisiblePropertyHandler)),
				new DomainMemberInfo(typeof(ViewSchema), "IsDefault", ViewSchema.IsDefaultDomainPropertyId, typeof(ViewSchema.IsDefaultPropertyHandler)),
				new DomainMemberInfo(typeof(ViewSchema), "DiagramId", ViewSchema.DiagramIdDomainPropertyId, typeof(ViewSchema.DiagramIdPropertyHandler)),
				new DomainMemberInfo(typeof(ViewSchema), "Caption", ViewSchema.CaptionDomainPropertyId, typeof(ViewSchema.CaptionPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableElementSchema), "IsCustomizable", CustomizableElementSchema.IsCustomizableDomainPropertyId, typeof(CustomizableElementSchema.IsCustomizablePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableElementSchema), "IsCustomizationEnabled", CustomizableElementSchema.IsCustomizationEnabledDomainPropertyId, typeof(CustomizableElementSchema.IsCustomizationEnabledPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableElementSchema), "IsCustomizationPolicyModifyable", CustomizableElementSchema.IsCustomizationPolicyModifyableDomainPropertyId, typeof(CustomizableElementSchema.IsCustomizationPolicyModifyablePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableElementSchema), "IsCustomizationEnabledState", CustomizableElementSchema.IsCustomizationEnabledStateDomainPropertyId, typeof(CustomizableElementSchema.IsCustomizationEnabledStatePropertyHandler)),
				new DomainMemberInfo(typeof(AbstractElementSchema), "IsVisible", AbstractElementSchema.IsVisibleDomainPropertyId, typeof(AbstractElementSchema.IsVisiblePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizationPolicySchema), "IsModified", CustomizationPolicySchema.IsModifiedDomainPropertyId, typeof(CustomizationPolicySchema.IsModifiedPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizationPolicySchema), "CustomizationLevel", CustomizationPolicySchema.CustomizationLevelDomainPropertyId, typeof(CustomizationPolicySchema.CustomizationLevelPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizationPolicySchema), "Name", CustomizationPolicySchema.NameDomainPropertyId, typeof(CustomizationPolicySchema.NamePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "IsEnabled", CustomizableSettingSchema.IsEnabledDomainPropertyId, typeof(CustomizableSettingSchema.IsEnabledPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "Caption", CustomizableSettingSchema.CaptionDomainPropertyId, typeof(CustomizableSettingSchema.CaptionPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "CaptionFormatter", CustomizableSettingSchema.CaptionFormatterDomainPropertyId, typeof(CustomizableSettingSchema.CaptionFormatterPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "IsModified", CustomizableSettingSchema.IsModifiedDomainPropertyId, typeof(CustomizableSettingSchema.IsModifiedPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "DefaultValue", CustomizableSettingSchema.DefaultValueDomainPropertyId, typeof(CustomizableSettingSchema.DefaultValuePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "Value", CustomizableSettingSchema.ValueDomainPropertyId, typeof(CustomizableSettingSchema.ValuePropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "PropertyId", CustomizableSettingSchema.PropertyIdDomainPropertyId, typeof(CustomizableSettingSchema.PropertyIdPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "DescriptionFormatter", CustomizableSettingSchema.DescriptionFormatterDomainPropertyId, typeof(CustomizableSettingSchema.DescriptionFormatterPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "Description", CustomizableSettingSchema.DescriptionDomainPropertyId, typeof(CustomizableSettingSchema.DescriptionPropertyHandler)),
				new DomainMemberInfo(typeof(CustomizableSettingSchema), "DomainElementSettingType", CustomizableSettingSchema.DomainElementSettingTypeDomainPropertyId, typeof(CustomizableSettingSchema.DomainElementSettingTypePropertyHandler)),
				new DomainMemberInfo(typeof(AutomationSettingsSchema), "AutomationType", AutomationSettingsSchema.AutomationTypeDomainPropertyId, typeof(AutomationSettingsSchema.AutomationTypePropertyHandler)),
				new DomainMemberInfo(typeof(AutomationSettingsSchema), "Settings", AutomationSettingsSchema.SettingsDomainPropertyId, typeof(AutomationSettingsSchema.SettingsPropertyHandler)),
				new DomainMemberInfo(typeof(AutomationSettingsSchema), "Classification", AutomationSettingsSchema.ClassificationDomainPropertyId, typeof(AutomationSettingsSchema.ClassificationPropertyHandler)),
				new DomainMemberInfo(typeof(ProvidedExtensionPointSchema), "ExtensionPointId", ProvidedExtensionPointSchema.ExtensionPointIdDomainPropertyId, typeof(ProvidedExtensionPointSchema.ExtensionPointIdPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointSchema), "RequiredExtensionPointId", ExtensionPointSchema.RequiredExtensionPointIdDomainPropertyId, typeof(ExtensionPointSchema.RequiredExtensionPointIdPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointSchema), "Conditions", ExtensionPointSchema.ConditionsDomainPropertyId, typeof(ExtensionPointSchema.ConditionsPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointSchema), "RepresentedExtensionPointId", ExtensionPointSchema.RepresentedExtensionPointIdDomainPropertyId, typeof(ExtensionPointSchema.RepresentedExtensionPointIdPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "Cardinality", ViewHasElements.CardinalityDomainPropertyId, typeof(ViewHasElements.CardinalityPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "CardinalityCaption", ViewHasElements.CardinalityCaptionDomainPropertyId, typeof(ViewHasElements.CardinalityCaptionPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "AutoCreate", ViewHasElements.AutoCreateDomainPropertyId, typeof(ViewHasElements.AutoCreatePropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "AllowAddNew", ViewHasElements.AllowAddNewDomainPropertyId, typeof(ViewHasElements.AllowAddNewPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "OrderGroup", ViewHasElements.OrderGroupDomainPropertyId, typeof(ViewHasElements.OrderGroupPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasElements), "OrderGroupComparerTypeName", ViewHasElements.OrderGroupComparerTypeNameDomainPropertyId, typeof(ViewHasElements.OrderGroupComparerTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "Cardinality", ElementHasElements.CardinalityDomainPropertyId, typeof(ElementHasElements.CardinalityPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "CardinalityCaption", ElementHasElements.CardinalityCaptionDomainPropertyId, typeof(ElementHasElements.CardinalityCaptionPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "AutoCreate", ElementHasElements.AutoCreateDomainPropertyId, typeof(ElementHasElements.AutoCreatePropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "AllowAddNew", ElementHasElements.AllowAddNewDomainPropertyId, typeof(ElementHasElements.AllowAddNewPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "OrderGroup", ElementHasElements.OrderGroupDomainPropertyId, typeof(ElementHasElements.OrderGroupPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasElements), "OrderGroupComparerTypeName", ElementHasElements.OrderGroupComparerTypeNameDomainPropertyId, typeof(ElementHasElements.OrderGroupComparerTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasExtensionPoints), "Cardinality", ElementHasExtensionPoints.CardinalityDomainPropertyId, typeof(ElementHasExtensionPoints.CardinalityPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasExtensionPoints), "CardinalityCaption", ElementHasExtensionPoints.CardinalityCaptionDomainPropertyId, typeof(ElementHasExtensionPoints.CardinalityCaptionPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasExtensionPoints), "OrderGroup", ElementHasExtensionPoints.OrderGroupDomainPropertyId, typeof(ElementHasExtensionPoints.OrderGroupPropertyHandler)),
				new DomainMemberInfo(typeof(ElementHasExtensionPoints), "OrderGroupComparerTypeName", ElementHasExtensionPoints.OrderGroupComparerTypeNameDomainPropertyId, typeof(ElementHasExtensionPoints.OrderGroupComparerTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasExtensionPoints), "Cardinality", ViewHasExtensionPoints.CardinalityDomainPropertyId, typeof(ViewHasExtensionPoints.CardinalityPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasExtensionPoints), "CardinalityCaption", ViewHasExtensionPoints.CardinalityCaptionDomainPropertyId, typeof(ViewHasExtensionPoints.CardinalityCaptionPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasExtensionPoints), "OrderGroup", ViewHasExtensionPoints.OrderGroupDomainPropertyId, typeof(ViewHasExtensionPoints.OrderGroupPropertyHandler)),
				new DomainMemberInfo(typeof(ViewHasExtensionPoints), "OrderGroupComparerTypeName", ViewHasExtensionPoints.OrderGroupComparerTypeNameDomainPropertyId, typeof(ViewHasExtensionPoints.OrderGroupComparerTypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "AuthoringGradientColor", PatternModelSchemaDiagram.AuthoringGradientColorDomainPropertyId, typeof(PatternModelSchemaDiagram.AuthoringGradientColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "AuthoringBackgroundColor", PatternModelSchemaDiagram.AuthoringBackgroundColorDomainPropertyId, typeof(PatternModelSchemaDiagram.AuthoringBackgroundColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "AuthoringTitleTextColor", PatternModelSchemaDiagram.AuthoringTitleTextColorDomainPropertyId, typeof(PatternModelSchemaDiagram.AuthoringTitleTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "TailoringGradientColor", PatternModelSchemaDiagram.TailoringGradientColorDomainPropertyId, typeof(PatternModelSchemaDiagram.TailoringGradientColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "TailoringBackgroundColor", PatternModelSchemaDiagram.TailoringBackgroundColorDomainPropertyId, typeof(PatternModelSchemaDiagram.TailoringBackgroundColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "TailoringTitleTextColor", PatternModelSchemaDiagram.TailoringTitleTextColorDomainPropertyId, typeof(PatternModelSchemaDiagram.TailoringTitleTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternModelSchemaDiagram), "ShowHiddenEntries", PatternModelSchemaDiagram.ShowHiddenEntriesDomainPropertyId, typeof(PatternModelSchemaDiagram.ShowHiddenEntriesPropertyHandler)),
				new DomainMemberInfo(typeof(PatternElementConnector), "TailoringOutlineColor", PatternElementConnector.TailoringOutlineColorDomainPropertyId, typeof(PatternElementConnector.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternElementConnector), "TailoringTextColor", PatternElementConnector.TailoringTextColorDomainPropertyId, typeof(PatternElementConnector.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternShape), "TailoringFillColor", PatternShape.TailoringFillColorDomainPropertyId, typeof(PatternShape.TailoringFillColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternShape), "TailoringTextColor", PatternShape.TailoringTextColorDomainPropertyId, typeof(PatternShape.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(PatternShape), "TailoringOutlineColor", PatternShape.TailoringOutlineColorDomainPropertyId, typeof(PatternShape.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(ElementShape), "TailoringFillColor", ElementShape.TailoringFillColorDomainPropertyId, typeof(ElementShape.TailoringFillColorPropertyHandler)),
				new DomainMemberInfo(typeof(ElementShape), "TailoringTextColor", ElementShape.TailoringTextColorDomainPropertyId, typeof(ElementShape.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(ElementShape), "TailoringOutlineColor", ElementShape.TailoringOutlineColorDomainPropertyId, typeof(ElementShape.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(CollectionShape), "TailoringFillColor", CollectionShape.TailoringFillColorDomainPropertyId, typeof(CollectionShape.TailoringFillColorPropertyHandler)),
				new DomainMemberInfo(typeof(CollectionShape), "TailoringTextColor", CollectionShape.TailoringTextColorDomainPropertyId, typeof(CollectionShape.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(CollectionShape), "TailoringOutlineColor", CollectionShape.TailoringOutlineColorDomainPropertyId, typeof(CollectionShape.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointShape), "TailoringFillColor", ExtensionPointShape.TailoringFillColorDomainPropertyId, typeof(ExtensionPointShape.TailoringFillColorPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointShape), "TailoringTextColor", ExtensionPointShape.TailoringTextColorDomainPropertyId, typeof(ExtensionPointShape.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(ExtensionPointShape), "TailoringOutlineColor", ExtensionPointShape.TailoringOutlineColorDomainPropertyId, typeof(ExtensionPointShape.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(ViewShape), "TailoringFillColor", ViewShape.TailoringFillColorDomainPropertyId, typeof(ViewShape.TailoringFillColorPropertyHandler)),
				new DomainMemberInfo(typeof(ViewShape), "TailoringTextColor", ViewShape.TailoringTextColorDomainPropertyId, typeof(ViewShape.TailoringTextColorPropertyHandler)),
				new DomainMemberInfo(typeof(ViewShape), "TailoringOutlineColor", ViewShape.TailoringOutlineColorDomainPropertyId, typeof(ViewShape.TailoringOutlineColorPropertyHandler)),
				new DomainMemberInfo(typeof(ViewShape), "IsLayoutInitialized", ViewShape.IsLayoutInitializedDomainPropertyId, typeof(ViewShape.IsLayoutInitializedPropertyHandler)),
			};
		}
		/// <summary>
		/// Gets the list of generated domain roles.
		/// </summary>
		/// <returns>List of role data.</returns>
		protected sealed override DomainRolePlayerInfo[] GetGeneratedDomainRoles()
		{
			return new DomainRolePlayerInfo[]
			{
				new DomainRolePlayerInfo(typeof(PatternModelHasPattern), "PatternModelSchema", PatternModelHasPattern.PatternModelSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternModelHasPattern), "PatternSchema", PatternModelHasPattern.PatternSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternElementHasProperties), "PatternElementSchema", PatternElementHasProperties.PatternElementSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternElementHasProperties), "PropertySchema", PatternElementHasProperties.PropertySchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternHasViews), "PatternSchema", PatternHasViews.PatternSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternHasViews), "ViewSchema", PatternHasViews.ViewSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasElements), "ViewSchema", ViewHasElements.ViewSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasElements), "AbstractElementSchema", ViewHasElements.AbstractElementSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PolicyHasSettings), "CustomizationPolicySchema", PolicyHasSettings.CustomizationPolicySchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PolicyHasSettings), "CustomizableSettingSchema", PolicyHasSettings.CustomizableSettingSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(CustomizableElementHasPolicy), "CustomizableElementSchema", CustomizableElementHasPolicy.CustomizableElementSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(CustomizableElementHasPolicy), "CustomizationPolicySchema", CustomizableElementHasPolicy.CustomizationPolicySchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementHasElements), "ParentElement", ElementHasElements.ParentElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementHasElements), "ChildElement", ElementHasElements.ChildElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternHasProvidedExtensionPoints), "PatternSchema", PatternHasProvidedExtensionPoints.PatternSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternHasProvidedExtensionPoints), "ProvidedExtensionPointSchema", PatternHasProvidedExtensionPoints.ProvidedExtensionPointSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementHasExtensionPoints), "ParentElement", ElementHasExtensionPoints.ParentElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementHasExtensionPoints), "ChildElement", ElementHasExtensionPoints.ChildElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasExtensionPoints), "ViewSchema", ViewHasExtensionPoints.ViewSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(ViewHasExtensionPoints), "ExtensionPointSchema", ViewHasExtensionPoints.ExtensionPointSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternElementHasAutomationSettings), "PatternElementSchema", PatternElementHasAutomationSettings.PatternElementSchemaDomainRoleId),
				new DomainRolePlayerInfo(typeof(PatternElementHasAutomationSettings), "AutomationSettingsSchema", PatternElementHasAutomationSettings.AutomationSettingsSchemaDomainRoleId),
			};
		}
		#endregion
		#region Factory methods
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementMap;
	
		/// <summary>
		/// Creates an element of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementType">Element type which belongs to this domain model.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		public sealed override DslModeling::ModelElement CreateElement(DslModeling::Partition partition, global::System.Type elementType, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementType == null) throw new global::System.ArgumentNullException("elementType");
	
			if (createElementMap == null)
			{
				createElementMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(27);
				createElementMap.Add(typeof(PatternModelSchema), 0);
				createElementMap.Add(typeof(PatternSchema), 1);
				createElementMap.Add(typeof(PropertySchema), 2);
				createElementMap.Add(typeof(ViewSchema), 3);
				createElementMap.Add(typeof(CollectionSchema), 4);
				createElementMap.Add(typeof(ElementSchema), 5);
				createElementMap.Add(typeof(CustomizationPolicySchema), 6);
				createElementMap.Add(typeof(CustomizableSettingSchema), 7);
				createElementMap.Add(typeof(AutomationSettingsSchema), 8);
				createElementMap.Add(typeof(ProvidedExtensionPointSchema), 9);
				createElementMap.Add(typeof(ExtensionPointSchema), 10);
				createElementMap.Add(typeof(PatternModelSchemaDiagram), 11);
				createElementMap.Add(typeof(ViewHasElementsConnector), 12);
				createElementMap.Add(typeof(ElementHasElementsConnector), 13);
				createElementMap.Add(typeof(ElementHasExtensionPointsConnector), 14);
				createElementMap.Add(typeof(ViewHasExtensionPointsConnector), 15);
				createElementMap.Add(typeof(PatternShape), 16);
				createElementMap.Add(typeof(ElementShape), 17);
				createElementMap.Add(typeof(CollectionShape), 18);
				createElementMap.Add(typeof(ExtensionPointShape), 19);
				createElementMap.Add(typeof(ViewShape), 20);
			}
			int index;
			if (!createElementMap.TryGetValue(elementType, out index))
			{
				// construct exception error message		
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel.SingletonResourceManager.GetString("UnrecognizedElementType"),
								elementType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementType");
			}
			switch (index)
			{
				case 0: return new PatternModelSchema(partition, propertyAssignments);
				case 1: return new PatternSchema(partition, propertyAssignments);
				case 2: return new PropertySchema(partition, propertyAssignments);
				case 3: return new ViewSchema(partition, propertyAssignments);
				case 4: return new CollectionSchema(partition, propertyAssignments);
				case 5: return new ElementSchema(partition, propertyAssignments);
				case 6: return new CustomizationPolicySchema(partition, propertyAssignments);
				case 7: return new CustomizableSettingSchema(partition, propertyAssignments);
				case 8: return new AutomationSettingsSchema(partition, propertyAssignments);
				case 9: return new ProvidedExtensionPointSchema(partition, propertyAssignments);
				case 10: return new ExtensionPointSchema(partition, propertyAssignments);
				case 11: return new PatternModelSchemaDiagram(partition, propertyAssignments);
				case 12: return new ViewHasElementsConnector(partition, propertyAssignments);
				case 13: return new ElementHasElementsConnector(partition, propertyAssignments);
				case 14: return new ElementHasExtensionPointsConnector(partition, propertyAssignments);
				case 15: return new ViewHasExtensionPointsConnector(partition, propertyAssignments);
				case 16: return new PatternShape(partition, propertyAssignments);
				case 17: return new ElementShape(partition, propertyAssignments);
				case 18: return new CollectionShape(partition, propertyAssignments);
				case 19: return new ExtensionPointShape(partition, propertyAssignments);
				case 20: return new ViewShape(partition, propertyAssignments);
				default: return null;
			}
		}
	
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementLinkMap;
	
		/// <summary>
		/// Creates an element link of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementLinkType">Element link type which belongs to this domain model.</param>
		/// <param name="roleAssignments">List of relationship role assignments for the new link.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element link.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		public sealed override DslModeling::ElementLink CreateElementLink(DslModeling::Partition partition, global::System.Type elementLinkType, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementLinkType == null) throw new global::System.ArgumentNullException("elementLinkType");
			if (roleAssignments == null) throw new global::System.ArgumentNullException("roleAssignments");
	
			if (createElementLinkMap == null)
			{
				createElementLinkMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(11);
				createElementLinkMap.Add(typeof(PatternModelHasPattern), 0);
				createElementLinkMap.Add(typeof(PatternElementHasProperties), 1);
				createElementLinkMap.Add(typeof(PatternHasViews), 2);
				createElementLinkMap.Add(typeof(ViewHasElements), 3);
				createElementLinkMap.Add(typeof(PolicyHasSettings), 4);
				createElementLinkMap.Add(typeof(CustomizableElementHasPolicy), 5);
				createElementLinkMap.Add(typeof(ElementHasElements), 6);
				createElementLinkMap.Add(typeof(PatternHasProvidedExtensionPoints), 7);
				createElementLinkMap.Add(typeof(ElementHasExtensionPoints), 8);
				createElementLinkMap.Add(typeof(ViewHasExtensionPoints), 9);
				createElementLinkMap.Add(typeof(PatternElementHasAutomationSettings), 10);
			}
			int index;
			if (!createElementLinkMap.TryGetValue(elementLinkType, out index))
			{
				// construct exception error message
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel.SingletonResourceManager.GetString("UnrecognizedElementLinkType"),
								elementLinkType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementLinkType");
			
			}
			switch (index)
			{
				case 0: return new PatternModelHasPattern(partition, roleAssignments, propertyAssignments);
				case 1: return new PatternElementHasProperties(partition, roleAssignments, propertyAssignments);
				case 2: return new PatternHasViews(partition, roleAssignments, propertyAssignments);
				case 3: return new ViewHasElements(partition, roleAssignments, propertyAssignments);
				case 4: return new PolicyHasSettings(partition, roleAssignments, propertyAssignments);
				case 5: return new CustomizableElementHasPolicy(partition, roleAssignments, propertyAssignments);
				case 6: return new ElementHasElements(partition, roleAssignments, propertyAssignments);
				case 7: return new PatternHasProvidedExtensionPoints(partition, roleAssignments, propertyAssignments);
				case 8: return new ElementHasExtensionPoints(partition, roleAssignments, propertyAssignments);
				case 9: return new ViewHasExtensionPoints(partition, roleAssignments, propertyAssignments);
				case 10: return new PatternElementHasAutomationSettings(partition, roleAssignments, propertyAssignments);
				default: return null;
			}
		}
		#endregion
		#region Resource manager
		
		private static global::System.Resources.ResourceManager resourceManager;
		
		/// <summary>
		/// The base name of this model's resources.
		/// </summary>
		public const string ResourceBaseName = "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx";
		
		/// <summary>
		/// Gets the DomainModel's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override global::System.Resources.ResourceManager ResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return PatternModelDomainModel.SingletonResourceManager;
			}
		}
	
		/// <summary>
		/// Gets the Singleton ResourceManager for this domain model.
		/// </summary>
		public static global::System.Resources.ResourceManager SingletonResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				if (PatternModelDomainModel.resourceManager == null)
				{
					PatternModelDomainModel.resourceManager = new global::System.Resources.ResourceManager(ResourceBaseName, typeof(PatternModelDomainModel).Assembly);
				}
				return PatternModelDomainModel.resourceManager;
			}
		}
		#endregion
		#region Copy/Remove closures
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter copyClosure;
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter removeClosure;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override DslModeling::IElementVisitorFilter GetClosureFilter(DslModeling::ClosureType type, global::System.Collections.Generic.ICollection<DslModeling::ModelElement> rootElements)
		{
			switch (type)
			{
				case DslModeling::ClosureType.CopyClosure:
					return PatternModelDomainModel.CopyClosure;
				case DslModeling::ClosureType.DeleteClosure:
					return PatternModelDomainModel.DeleteClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (PatternModelDomainModel.copyClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter copyFilter = new DslModeling::ChainingElementVisitorFilter();
					copyFilter.AddFilter(new PatternModelCopyClosure());
					copyFilter.AddFilter(new DslModeling::CoreCopyClosure());
					copyFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceCopyClosure());
					
					PatternModelDomainModel.copyClosure = copyFilter;
				}
				return PatternModelDomainModel.copyClosure;
			}
		}
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter DeleteClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (PatternModelDomainModel.removeClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter removeFilter = new DslModeling::ChainingElementVisitorFilter();
					removeFilter.AddFilter(new PatternModelDeleteClosure());
					removeFilter.AddFilter(new DslModeling::CoreDeleteClosure());
					removeFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceDeleteClosure());
		
					PatternModelDomainModel.removeClosure = removeFilter;
				}
				return PatternModelDomainModel.removeClosure;
			}
		}
		#endregion
		#region Diagram rule helpers
		/// <summary>
		/// Enables rules in this domain model related to diagram fixup for the given store.
		/// If diagram data will be loaded into the store, this method should be called first to ensure
		/// that the diagram behaves properly.
		/// </summary>
		public static void EnableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.FixUpDiagram));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.DecoratorPropertyChanged));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ConnectorRolePlayerChanged));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemAddRule));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemDeleteRule));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerChangeRule));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.EnableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemChangeRule));
		}
		
		/// <summary>
		/// Disables rules in this domain model related to diagram fixup for the given store.
		/// </summary>
		public static void DisableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.FixUpDiagram));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.DecoratorPropertyChanged));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ConnectorRolePlayerChanged));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemAddRule));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemDeleteRule));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerChangeRule));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.DisableRule(typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CompartmentItemChangeRule));
		}
		#endregion
	}
		
	#region Copy/Remove closure classes
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class PatternModelDeleteClosure : PatternModelDeleteClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public PatternModelDeleteClosure() : base()
		{
		}
	}
	
	/// <summary>
	/// Base class for remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class PatternModelDeleteClosureBase : DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary domainRoles;
		/// <summary>
		/// Constructor
		/// </summary>
		public PatternModelDeleteClosureBase()
		{
			#region Initialize DomainData Table
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelHasPattern.PatternSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternElementHasProperties.PropertySchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternHasViews.ViewSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ViewHasElements.AbstractElementSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PolicyHasSettings.CustomizableSettingSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizableElementHasPolicy.CustomizationPolicySchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ElementHasElements.ChildElementDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternHasProvidedExtensionPoints.ProvidedExtensionPointSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ElementHasExtensionPoints.ChildElementDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.ViewHasExtensionPoints.ExtensionPointSchemaDomainRoleId, true);
			DomainRoles.Add(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternElementHasAutomationSettings.AutomationSettingsSchemaDomainRoleId, true);
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">DomainRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="domainRelationshipInfo">DomainRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRelationship(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::DomainRoleInfo sourceRoleInfo, DslModeling::DomainRelationshipInfo domainRelationshipInfo, DslModeling::ElementLink targetRelationship)
		{
			return DslModeling::VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetDomainRole">DomainRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRolePlayer(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::ElementLink elementLink, DslModeling::DomainRoleInfo targetDomainRole, DslModeling::ModelElement targetRolePlayer)
		{
			if (targetDomainRole == null) throw new global::System.ArgumentNullException("targetDomainRole");
			return this.DomainRoles.Contains(targetDomainRole.Id) ? DslModeling::VisitorFilterResult.Yes : DslModeling::VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary DomainRoles
		{
			get
			{
				if (this.domainRoles == null)
				{
					this.domainRoles = new global::System.Collections.Specialized.HybridDictionary();
				}
				return this.domainRoles;
			}
		}
	
	}
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class PatternModelCopyClosure : PatternModelCopyClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public PatternModelCopyClosure() : base()
		{
		}
	}
	/// <summary>
	/// Base class for copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class PatternModelCopyClosureBase : DslModeling::CopyClosureFilter, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public PatternModelCopyClosureBase():base()
		{
		}
	}
	#endregion
		
}
namespace Microsoft.VisualStudio.Patterning.Runtime.Schema
{
	/// <summary>
	/// DomainEnumeration: CustomizationEnabledState
	/// The combined state of IsEnabled and IsCustomizable.
	/// </summary>
	internal enum CustomizationEnabledState
	{
		/// <summary>
		/// FalseEnabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.FalseEnabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/FalseEnabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		FalseEnabled,
		/// <summary>
		/// FalseDisabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.FalseDisabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/FalseDisabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		FalseDisabled,
		/// <summary>
		/// InheritedEnabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.InheritedEnabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/InheritedEnabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		InheritedEnabled,
		/// <summary>
		/// TrueDisabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.TrueDisabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/TrueDisabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		TrueDisabled,
		/// <summary>
		/// TrueEnabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.TrueEnabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/TrueEnabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		TrueEnabled,
		/// <summary>
		/// InheritedDisabled
		/// Description for
		/// Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState.InheritedDisabled
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizationEnabledState/InheritedDisabled.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		InheritedDisabled,
	}
}
namespace Microsoft.VisualStudio.Patterning.Runtime.Schema
{
	/// <summary>
	/// DomainEnumeration: CustomizableDomainElementSettingType
	/// The kinds of domain element that has been marked as customizable.
	/// </summary>
	internal enum CustomizableDomainElementSettingType
	{
		/// <summary>
		/// DomainProperty
		/// The domain property is customizable as a whole.
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizableDomainElementSettingType/DomainProperty.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		DomainProperty,
		/// <summary>
		/// DomainRole
		/// The domain role, and all its child elements are customizable as a whole.
		/// </summary>
		[DslDesign::DescriptionResource("Microsoft.VisualStudio.Patterning.Runtime.Schema.CustomizableDomainElementSettingType/DomainRole.Description", typeof(global::Microsoft.VisualStudio.Patterning.Runtime.Schema.PatternModelDomainModel), "Microsoft.VisualStudio.Patterning.Runtime.Schema.GeneratedCode.DomainModelResx")]
		DomainRole,
	}
}

