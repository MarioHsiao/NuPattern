<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".gen.cs" #>
<#@ Dsl processor="DslDirectiveProcessor"  requires="fileName='..\..\DslDefinition.dsl'" #>
<#@ Assembly Name="System.Core" #>
<#@ Import Namespace="System.Linq" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NuPattern.Runtime.Automation;

namespace <#= this.DslLibrary.Namespace #>
{
<#
PushIndent("    ");

foreach(DomainClass domainClass in this.DslLibrary.Classes.Where(dc => IsModelElementExtension(dc)))
{
    GenerateExportAttributes(domainClass);
}

PopIndent();
#>
}
<#+

// TODO: move to Helpers.tt
private bool IsModelElementExtension(DomainClass domainClass)
{
    return domainClass.BaseClass != null && (domainClass.BaseClass.Name == "ExtensionElement" || domainClass.BaseClass.Name.Equals("BindingSettings"))  && domainClass.InheritanceModifier != InheritanceModifier.Abstract &&
        domainClass.Notes.Equals("IsAutomationExtension=True", StringComparison.OrdinalIgnoreCase);
}

private void GenerateExportAttributes(DomainClass domainClass)
{
#>

/// <summary>
/// Exports the '<#= domainClass.Name #>' extension element.
/// </summary>
[ExportedAutomation(ExportingType = typeof(<#= domainClass.Name #>), IconPath = "pack://application:,,,/NuPattern.Library;component/Resources/AutomationSettings<#= domainClass.Name #>.png")]
partial class <#= domainClass.Name #>
{
}
<#+
}

public Version DslVersion
{
    get { return new Version(this.DslLibrary.MajorVersion, this.DslLibrary.MinorVersion, this.DslLibrary.Build, this.DslLibrary.Revision); }
}
#>