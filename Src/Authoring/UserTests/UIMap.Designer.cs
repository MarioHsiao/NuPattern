// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace NuPattern.Authoring.UserTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public partial class UIMap
    {
        
        /// <summary>
        /// UnfoldPatternToolkitProject - Use 'UnfoldPatternToolkitProjectParams' to pass parameters into this method.
        /// </summary>
        public void UnfoldPatternToolkitProject()
        {
            #region Variable Declarations
            WpfEdit uISearchEdit = this.UINewProjectWindow.UIM_vsExtnsExplorerCtlCustom.UIM_SearchBoxCustom.UISearchEdit;
            WpfControl uIInstalledTemplatesDataItem = this.UINewProjectWindow.UIM_vsExtnsExplorerCtlCustom.UIExtensionProvidersLiTable.UIInstalledTemplatesDataItem;
            WpfTreeItem uISearchResultsTreeItem = this.UINewProjectWindow.UIItemExpander.UIInstalledTemplatesTree.UISearchResultsTreeItem;
            WpfControl uIPatternToolkitDataItem = this.UINewProjectWindow.UIM_vsExtnsExplorerCtlCustom.UIExtensionsTable.UIPatternToolkitDataItem;
            WpfEdit uINameEdit = this.UINewProjectWindow.UINameEdit;
            WpfButton uIOKButton = this.UINewProjectWindow.UIOKButton;
            WinButton uIOKButton1 = this.UIMicrosoftVisualStudiWindow.UIOKWindow.UIOKButton;
            #endregion

            // Launch '%ProgramFiles%\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe' with arguments '/rootSuffix Exp'
            ApplicationUnderTest devenvApplication = ApplicationUnderTest.Launch(this.UnfoldPatternToolkitProjectParams.ExePath, this.UnfoldPatternToolkitProjectParams.AlternateExePath, "/rootSuffix Exp");

            // Type 'Pattern Toolkit' in 'Search' text box
            uISearchEdit.Text = this.UnfoldPatternToolkitProjectParams.UISearchEditText;

            // Type '{Tab}' in 'Search' text box
            Keyboard.SendKeys(uISearchEdit, this.UnfoldPatternToolkitProjectParams.UISearchEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Installed Templates' DataItem
            Keyboard.SendKeys(uIInstalledTemplatesDataItem, this.UnfoldPatternToolkitProjectParams.UIInstalledTemplatesDataItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Search Results' tree item
            Keyboard.SendKeys(uISearchResultsTreeItem, this.UnfoldPatternToolkitProjectParams.UISearchResultsTreeItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Pattern Toolkit' DataItem
            Keyboard.SendKeys(uIPatternToolkitDataItem, this.UnfoldPatternToolkitProjectParams.UIPatternToolkitDataItemSendKeys, ModifierKeys.None);

            // Click 'Name:' text box
            Mouse.Click(uINameEdit, new Point(120, 17));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(39, 13));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(33, 13));
        }
        
        #region Properties
        public virtual UnfoldPatternToolkitProjectParams UnfoldPatternToolkitProjectParams
        {
            get
            {
                if ((this.mUnfoldPatternToolkitProjectParams == null))
                {
                    this.mUnfoldPatternToolkitProjectParams = new UnfoldPatternToolkitProjectParams();
                }
                return this.mUnfoldPatternToolkitProjectParams;
            }
        }
        
        public UINewProjectWindow UINewProjectWindow
        {
            get
            {
                if ((this.mUINewProjectWindow == null))
                {
                    this.mUINewProjectWindow = new UINewProjectWindow();
                }
                return this.mUINewProjectWindow;
            }
        }
        
        public UIMicrosoftVisualStudiWindow UIMicrosoftVisualStudiWindow
        {
            get
            {
                if ((this.mUIMicrosoftVisualStudiWindow == null))
                {
                    this.mUIMicrosoftVisualStudiWindow = new UIMicrosoftVisualStudiWindow();
                }
                return this.mUIMicrosoftVisualStudiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UnfoldPatternToolkitProjectParams mUnfoldPatternToolkitProjectParams;
        
        private UINewProjectWindow mUINewProjectWindow;
        
        private UIMicrosoftVisualStudiWindow mUIMicrosoftVisualStudiWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnfoldPatternToolkitProject'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UnfoldPatternToolkitProjectParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe' with arguments '/rootSuffix Exp'
        /// </summary>
        public string ExePath = "C:\\Program Files\\Microsoft Visual Studio 10.0\\Common7\\IDE\\devenv.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe' with arguments '/rootSuffix Exp'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Microsoft Visual Studio 10.0\\Common7\\IDE\\devenv.exe";
        
        /// <summary>
        /// Type 'Pattern Toolkit' in 'Search' text box
        /// </summary>
        public string UISearchEditText = "Pattern Toolkit";
        
        /// <summary>
        /// Type '{Tab}' in 'Search' text box
        /// </summary>
        public string UISearchEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Installed Templates' DataItem
        /// </summary>
        public string UIInstalledTemplatesDataItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Search Results' tree item
        /// </summary>
        public string UISearchResultsTreeItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Pattern Toolkit' DataItem
        /// </summary>
        public string UIPatternToolkitDataItemSendKeys = "{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UINewProjectWindow : WpfWindow
    {
        
        public UINewProjectWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "New Project";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public UIM_vsExtnsExplorerCtlCustom UIM_vsExtnsExplorerCtlCustom
        {
            get
            {
                if ((this.mUIM_vsExtnsExplorerCtlCustom == null))
                {
                    this.mUIM_vsExtnsExplorerCtlCustom = new UIM_vsExtnsExplorerCtlCustom(this);
                }
                return this.mUIM_vsExtnsExplorerCtlCustom;
            }
        }
        
        public UIItemExpander UIItemExpander
        {
            get
            {
                if ((this.mUIItemExpander == null))
                {
                    this.mUIItemExpander = new UIItemExpander(this);
                }
                return this.mUIItemExpander;
            }
        }
        
        public WpfEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Name";
                    this.mUINameEdit.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btn_OK";
                    this.mUIOKButton.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIM_vsExtnsExplorerCtlCustom mUIM_vsExtnsExplorerCtlCustom;
        
        private UIItemExpander mUIItemExpander;
        
        private WpfEdit mUINameEdit;
        
        private WpfButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIM_vsExtnsExplorerCtlCustom : WpfCustom
    {
        
        public UIM_vsExtnsExplorerCtlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.VSExtensionsExplorerCtl";
            this.SearchProperties["AutomationId"] = "m_vsExtnsExplorerCtl";
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public UIM_SearchBoxCustom UIM_SearchBoxCustom
        {
            get
            {
                if ((this.mUIM_SearchBoxCustom == null))
                {
                    this.mUIM_SearchBoxCustom = new UIM_SearchBoxCustom(this);
                }
                return this.mUIM_SearchBoxCustom;
            }
        }
        
        public UIExtensionProvidersLiTable UIExtensionProvidersLiTable
        {
            get
            {
                if ((this.mUIExtensionProvidersLiTable == null))
                {
                    this.mUIExtensionProvidersLiTable = new UIExtensionProvidersLiTable(this);
                }
                return this.mUIExtensionProvidersLiTable;
            }
        }
        
        public UIExtensionsTable UIExtensionsTable
        {
            get
            {
                if ((this.mUIExtensionsTable == null))
                {
                    this.mUIExtensionsTable = new UIExtensionsTable(this);
                }
                return this.mUIExtensionsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIM_SearchBoxCustom mUIM_SearchBoxCustom;
        
        private UIExtensionProvidersLiTable mUIExtensionProvidersLiTable;
        
        private UIExtensionsTable mUIExtensionsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIM_SearchBoxCustom : WpfCustom
    {
        
        public UIM_SearchBoxCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.SearchBox";
            this.SearchProperties["AutomationId"] = "m_SearchBox";
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public WpfEdit UISearchEdit
        {
            get
            {
                if ((this.mUISearchEdit == null))
                {
                    this.mUISearchEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUISearchEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Search";
                    this.mUISearchEdit.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUISearchEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUISearchEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIExtensionProvidersLiTable : WpfTable
    {
        
        public UIExtensionProvidersLiTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ProvidersUid";
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public WpfControl UIInstalledTemplatesDataItem
        {
            get
            {
                if ((this.mUIInstalledTemplatesDataItem == null))
                {
                    this.mUIInstalledTemplatesDataItem = new WpfControl(this);
                    #region Search Criteria
                    this.mUIInstalledTemplatesDataItem.SearchProperties[UITestControl.PropertyNames.ControlType] = "DataItem";
                    this.mUIInstalledTemplatesDataItem.SearchProperties["AutomationId"] = "Installed Templates";
                    this.mUIInstalledTemplatesDataItem.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUIInstalledTemplatesDataItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mUIInstalledTemplatesDataItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIExtensionsTable : WpfTable
    {
        
        public UIExtensionsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "lvw_Extensions";
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public WpfControl UIPatternToolkitDataItem
        {
            get
            {
                if ((this.mUIPatternToolkitDataItem == null))
                {
                    this.mUIPatternToolkitDataItem = new WpfControl(this);
                    #region Search Criteria
                    this.mUIPatternToolkitDataItem.SearchProperties[UITestControl.PropertyNames.ControlType] = "DataItem";
                    this.mUIPatternToolkitDataItem.SearchProperties["AutomationId"] = "Pattern Toolkit";
                    this.mUIPatternToolkitDataItem.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUIPatternToolkitDataItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mUIPatternToolkitDataItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIItemExpander : WpfExpander
    {
        
        public UIItemExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public UIInstalledTemplatesTree UIInstalledTemplatesTree
        {
            get
            {
                if ((this.mUIInstalledTemplatesTree == null))
                {
                    this.mUIInstalledTemplatesTree = new UIInstalledTemplatesTree(this);
                }
                return this.mUIInstalledTemplatesTree;
            }
        }
        #endregion
        
        #region Fields
        private UIInstalledTemplatesTree mUIInstalledTemplatesTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIInstalledTemplatesTree : WpfTree
    {
        
        public UIInstalledTemplatesTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "Installed Templates";
            this.WindowTitles.Add("New Project");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem UISearchResultsTreeItem
        {
            get
            {
                if ((this.mUISearchResultsTreeItem == null))
                {
                    this.mUISearchResultsTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUISearchResultsTreeItem.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Search Results";
                    this.mUISearchResultsTreeItem.WindowTitles.Add("New Project");
                    #endregion
                }
                return this.mUISearchResultsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mUISearchResultsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIMicrosoftVisualStudiWindow : WinWindow
    {
        
        public UIMicrosoftVisualStudiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Microsoft Visual Studio";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Microsoft Visual Studio");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.415")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Microsoft Visual Studio");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Microsoft Visual Studio");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
