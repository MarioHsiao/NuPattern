<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="Microsoft.VisualStudio.TeamArchitect.PowerTools.dll" #>
<#@ Assembly Name="Microsoft.VisualStudio.Patterning.Runtime.Interfaces.dll" #>
<#@ Assembly Name="Microsoft.VisualStudio.Patterning.Authoring.Toolkit.Shell.dll" #>
<#@ Assembly Name="Microsoft.VisualStudio.Patterning.Extensibility.dll" #>
<#@ Import Namespace="Microsoft.VisualStudio.Patterning.Runtime" #>
<#@ Import Namespace="Microsoft.VisualStudio.Patterning.Extensibility" #>
<#@ Assembly Name="System.Data.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" #>
<#@ Import Namespace="System.Linq" #>
<#@ Import Namespace="System.ComponentModel" #>
<#@ Import Namespace="System.Reflection" #>
<#@ Import Namespace="System.Data.Entity.Design.PluralizationServices" #>
<#@ Include File="Header.t4" #>
<#@ Include File="NamedElementParentInterface.t4" #>
<#@ Include File="ElementContainerInterface.t4" #>
<#@ Include File="Helpers.t4" #>
<#
var product = this.ProductLine.Product;

// The pluralizer in .NET 4.0 only supports English.
var pluralizer = PluralizationService.CreateService(new System.Globalization.CultureInfo("en-US"));

foreach(var view in product.Views)
{
#>
namespace <#=RootNamespace#>
{
	using System;
	using System.ComponentModel;
	using System.Collections.Generic;
	using Microsoft.VisualStudio.Patterning.Runtime;

	<#GenerateFactoryInterfaceAttributes(view); #>
	public partial interface I<#=view.CodeIdentifier#> : IFactoryInterface
	{ <#
GenerateParentProperty(view);

PushIndent("\t");
PushIndent("\t");

GenerateContainedElements(pluralizer, view);
GenerateDeleteInterfaceMethod();

PopIndent();
PopIndent();
#>

		/// <summary>
		/// Gets the generic <see cref="IView"/> underlying element.
		/// </summary>
		IView AsView();
	}
}

<#
}
#>