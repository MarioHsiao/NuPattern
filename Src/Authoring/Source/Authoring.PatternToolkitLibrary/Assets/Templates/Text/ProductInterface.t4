<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True"#>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ output extension=".gen.cs" #>
<#@ Include File="Common.t4include" #>
<#@ Include File="ProductElement.t4include" #>
<#
var library = this.Element.As<IPatternToolkitLibrary>();
var developmentView = this.Element.Parent.Parent.As<NuPattern.Authoring.PatternToolkit.IDevelopment>();
var toolkitInfo = developmentView.PatternToolkitInfo;

if (toolkitInfo == null)
    throw new Exception("ToolkitInfo element not found");

var patternModel = developmentView.PatternModel;
var patternModelInfo = LoadPatternModel(patternModel.ToolkitDefinitionFile);
var pattern = patternModelInfo.Pattern;

var codegen = new ProductCodeGeneration<IPatternInfo, IProduct>(pattern);
codegen.AddType(typeof(Action));
codegen.AddType(typeof(NuPattern.Runtime.ToolkitInterface.ToolkitInterfaceLayer));
codegen.EndInit();

GenerateNamespaceBegin(library);
GenerateUsings(codegen);
GenerateToolkitCommentsAndAttributes(AttributeTargets.Interface, library, toolkitInfo, pattern);
GenerateClassBegin(pattern, true);
GenerateProperties(codegen, pattern, true);
GenerateProductViews(pattern, true);
GenerateDeleteMethod(true);
GenerateAutoGeneralizedInterfaceMethod("Product", true);
GenerateClassEnd();
GenerateNamespaceEnd();
#>