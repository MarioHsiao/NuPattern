<#@ Template Inherits="NuPattern.Library.ModelElementTextTransformation" HostSpecific="True" #>
<#@ ModelElement Type="NuPattern.Runtime.IProductElement" Processor="ModelElementProcessor" #>
<#@ output extension=".gen.ttinclude" #>
<#@ Assembly Name="NuPattern.Common.dll" #>
<#@ Assembly Name="NuPattern.Runtime.Extensibility.dll" #>
<#@ Assembly Name="NuPattern.Authoring.PatternToolkit.Automation.dll" #>
<#@ Import Namespace="System.Linq" #>
<#@ Import Namespace="NuPattern.Runtime" #>
<#@ Import Namespace="NuPattern.Runtime.ToolkitInterface" #>
<#@ Import Namespace="NuPattern.Authoring.PatternToolkit" #>
<#@ Import Namespace="NuPattern.Authoring.PatternToolkitLibrary" #>
<#@ Include File="..\Utilities.t4include" #>
<#
var toolkitInfo = this.Element.As<IPatternToolkitInfo>();
var product = toolkitInfo.Parent.Parent;
var toolkit = product as IPatternToolkit;
var automationLibrary = toolkit.Development.AutomationCollection.AsCollection().Extensions.FirstOrDefault(); // Workaround for bug in extensionPoints
var libraryProjectName = (automationLibrary != null) ? (automationLibrary.As<IPatternToolkitLibrary>().ProjectName) : (product.InstanceName + ".Automation");

#>
\<#+
<#
    Indent();
#>
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<#
    UnIndent();
    WriteBlankLine();
    Indent();
#>
//------------------------------------------------------------------------------
// Toolkit Info
//------------------------------------------------------------------------------
public const string identifier = @"<#=toolkitInfo.Identifier#>";
public const string toolkitName = @"<#=toolkitInfo.ToolkitName#>";
public const string author = @"<#=toolkitInfo.Author#>";
public const string version = @"<#=toolkitInfo.Version#>";
public const string description = @"<#=toolkitInfo.Description#>";
public const string eula = @"<#=toolkitInfo.Eula#>";
public const string icon = @"<#=toolkitInfo.Icon#>";
<#
    UnIndent();
    WriteBlankLine();
    Indent();
#>
//------------------------------------------------------------------------------
// Toolkit Project Info
//------------------------------------------------------------------------------
public const string rootNamespace = @"<#=toolkit.ProjectRootNamespace#>";
public const string assemblyName = @"<#=toolkit.ProjectAssemblyName#>";
public const string libraryProjectName = @"<#=libraryProjectName#>";
<#
    UnIndent();
    WriteBlankLine();
    Indent();
#>
//------------------------------------------------------------------------------
// Environment Info
//------------------------------------------------------------------------------
public const string supportedVsVersion = @"11.0";
public const string supportedFrxMinVersion = @"4.0";
public const string supportedFrxMaxVersion = @"4.5";
<#
    UnIndent();
    WriteBlankLine();
    Indent();
#>
//------------------------------------------------------------------------------
// NuPattern Info
//------------------------------------------------------------------------------
public const string managerVsixIdentifier = @"93373818-600f-414b-8181-3a0cb79fa785";
public const string managerVsixName = @"NuPattern Toolkit Manager";
public const string managerVsixVersion = @"1.3.23.0";
public const string managerVsixFileName = @"NuPatternToolkitManager.vsix";
<#
    UnIndent();
    WriteBlankLine();
    Indent();
#>
public bool HasValue(string value)
{
    return !string.IsNullOrEmpty(value);
}
<#
    UnIndent();
#>
\#>