//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuPattern.Build.Tasks.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuPattern.Build.Tasks.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwriting existing file: &apos;{0}&apos;, from &apos;{1}&apos;.
        /// </summary>
        internal static string AddFilesToZipPackage_AddExistingFileToArchive {
            get {
                return ResourceManager.GetString("AddFilesToZipPackage_AddExistingFileToArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding files to archive &apos;{0}&apos;, from &apos;{1}&apos;, matching expression: &apos;{2}&apos;.
        /// </summary>
        internal static string AddFilesToZipPackage_AddFilesToArchive {
            get {
                return ResourceManager.GetString("AddFilesToZipPackage_AddFilesToArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding new file: &apos;{0}&apos;, from &apos;{1}&apos;..
        /// </summary>
        internal static string AddFilesToZipPackage_AddNewFileToArchive {
            get {
                return ResourceManager.GetString("AddFilesToZipPackage_AddNewFileToArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add file &apos;{0} to archive. Error was: {1}..
        /// </summary>
        internal static string AddFileToZipPackage_AddFileFailed {
            get {
                return ResourceManager.GetString("AddFileToZipPackage_AddFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not compressing added files as &apos;CompressionLevel&apos; &apos;{0}&apos; is unsupported. Supported values are: &apos;{1}&apos;.
        /// </summary>
        internal static string AddFileToZipPackage_CompressionLevelNotSet {
            get {
                return ResourceManager.GetString("AddFileToZipPackage_CompressionLevelNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not compressing added files as &apos;CompressionLevel&apos; is empty..
        /// </summary>
        internal static string AddFileToZipPackage_CompressionLevelNotSupported {
            get {
                return ResourceManager.GetString("AddFileToZipPackage_CompressionLevelNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;SourceArchive&apos;: &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string AddFileToZipPackage_SourceArchiveNotExist {
            get {
                return ResourceManager.GetString("AddFileToZipPackage_SourceArchiveNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;SourcePath&apos;: &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string AddFileToZipPackage_SourcePathNotExist {
            get {
                return ResourceManager.GetString("AddFileToZipPackage_SourcePathNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting files from archive &apos;{0}&apos;, matching expression: &apos;{1}&apos;.
        /// </summary>
        internal static string ExtractFilesFromZipPackage_ExtractArchive {
            get {
                return ResourceManager.GetString("ExtractFilesFromZipPackage_ExtractArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting archived file &apos;{0}&apos; to &apos;{1}&apos;.
        /// </summary>
        internal static string ExtractFilesFromZipPackage_ExtractPart {
            get {
                return ResourceManager.GetString("ExtractFilesFromZipPackage_ExtractPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to extract part &apos;{0}&apos; from archive. Error was: {1}..
        /// </summary>
        internal static string ExtractFilesFromZipPackage_ExtractPartFailed {
            get {
                return ResourceManager.GetString("ExtractFilesFromZipPackage_ExtractPartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;SourceArchive&apos;: &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ExtractFilesFromZipPackage_SourceArchiveNotExist {
            get {
                return ResourceManager.GetString("ExtractFilesFromZipPackage_SourceArchiveNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;TargetPath&apos;: &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ExtractFilesFromZipPackage_TargetPathNotExist {
            get {
                return ResourceManager.GetString("ExtractFilesFromZipPackage_TargetPathNotExist", resourceCulture);
            }
        }
    }
}
